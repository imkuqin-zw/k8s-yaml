apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-gitlab
  namespace: cicd
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: datalayer-nfs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab
  namespace: cicd
  labels:
    name: gitlab
spec:
  selector:
    matchLabels:
      app: gitlab
  replicas: 1
  template:
    metadata:
      labels:
        name: gitlab
        app: gitlab
    spec:
      hostAliases:
        - ip: "192.168.2.101"
          hostnames:
            - "gitlab.zw.com"
            - "drone.zw.com"
        - ip: "192.168.2.17"
          hostnames:
            - "gitlab.zw.com"
            - "drone.zw.com"
      containers:
        - name: gitlab
          image: gitlab/gitlab-ce:12.9.2-ce.0
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: Asia/Shanghai
            - name: GITLAB_TIMEZONE
              value: Beijing
            - name: GITLAB_ROOT_PASSWORD
              value: "123456"
            - name: GITLAB_ROOT_EMAIL
              value: 1141137429@qq.com
            - name: GITLAB_HOST
              value: gitlab.zw.com
            - name: GITLAB_PORT
              value: "80"
            - name: GITLAB_OMNIBUS_CONFIG
              value: |
                postgresql['enable'] = false
                gitlab_rails['db_username'] = "gitlab"
                gitlab_rails['db_password'] = "gitlab"
                gitlab_rails['db_host'] = "postgresql"
                gitlab_rails['db_port'] = "5432"
                gitlab_rails['db_database'] = "gitlab_production"
                gitlab_rails['db_adapter'] = 'postgresql'
                gitlab_rails['db_encoding'] = 'utf8'
                redis['enable'] = false
                gitlab_rails['redis_host'] = 'redis'
                gitlab_rails['redis_port'] = '6379'
                gitlab_rails['gitlab_shell_ssh_port'] = '22'
                external_url 'http://gitlab.zw.com'
          ports:
            - name: http
              containerPort: 80
            - name: ssh
              containerPort: 22
          volumeMounts:
            - mountPath: /var/opt/gitlab
              subPath: gitlab_data
              name: nfs
            - mountPath: /etc/gitlab
              subPath: gitlab_configuration
              name: nfs
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            timeoutSeconds: 1
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName: pvc-gitlab
---
apiVersion: v1
kind: Service
metadata:
  name: gitlab
  namespace: cicd
  labels:
    name: gitlab
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: ssh
      port: 22
      targetPort: ssh
  selector:
    name: gitlab

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gitlab
  namespace: cicd
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: gitlab.zw.com
      http:
        paths:
          - backend:
              serviceName: gitlab
              servicePort: http
# kubectl -n kube-system exec -it  nginx-ingress-controller-c888c59f7-n6k2v -c nginx-ingress-controller cat nginx.conf
